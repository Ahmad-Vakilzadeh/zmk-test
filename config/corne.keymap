/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        change_space: change_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp NUMBER_1>, <&macro_tap>;

            label = "CHANGE_SPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q                &kp W            &kp E                &kp R              &kp T        &kp Y    &kp U               &kp I             &kp O             &kp P                         &kp BSPC
&kp DELETE  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_COMMAND D  &hml LEFT_SHIFT F  &kp G        &kp H    &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT   &kp Z                &kp X            &kp C                &kp V              &kp B        &kp N    &kp M               &kp COMMA         &kp DOT           &kp FSLH                      &kp TILDE
                                                  &kp LGUI             &lt 1 TAB          &kp SPACE    &kp RET  &mo 2               &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3    &trans  &trans       &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans         &trans  &kp BSPC
&kp LEFT_CONTROL  &kp N4  &kp N5  &kp N6    &trans  &trans       &kp LEFT    &kp DOWN           &kp UP           &kp RIGHT      &trans  &trans
&kp LSHFT         &kp N7  &kp N8  &kp N9    &kp N0  &trans       &bt BT_PRV  &bt BT_NXT         &bt BT_CLR       &bt BT_DISC 2  &trans  &trans
                                  &kp LGUI  &trans  &kp SPACE    &kp RET     &trans             &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL                           &kp AT                             &kp HASH                           &kp DLLR                           &kp PRCNT                &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &mt LC(NUMBER_1) LA(LS(NUMBER_1))  &mt LC(NUMBER_2) LS(LA(NUMBER_2))  &mt LC(NUMBER_3) LS(LA(NUMBER_3))  &mt LC(NUMBER_4) LS(LA(NUMBER_4))  &mt LC(N5) LS(LA(N5))    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &mt LC(NUMBER_6) LS(LA(NUMBER_6))  &mt LC(N7) LS(LA(N7))              &mt LC(N8) LS(LA(N8))              &mt LC(N9) LS(LA(N9))              &kp LA(LS(M))            &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                                                                 &kp LGUI                           &trans                             &kp SPACE                &kp RET    &trans     &kp RALT
            >;
        };
    };
};
